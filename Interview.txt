1. What do you think are some advantages of automation testing?
	=> In my opinion, before testing a certain feature or UI I have to define what to do and list test cases.
	=> Automated testing will detect small or large defects and respond quickly,it can execute simple or complex test cases and shorten test case execution tim

This is a system for innovative cash flow management seamlessly integrates with your cloud 
accounting system to offer real-time insights into your cash flow, manage invoices, and much more. 
The product includes a Web application and backend APIs integration with 3rd party service.



	Create, manage and execute test cases
	Perform functional and API testing.
	Working on manual and automation testing.
	Work with BA on clarifying requirements.
	Work with developers on requirement and defects.


	I need to know which API it is.Then I will list the possible test cases for that API. 
	after that, I will write test script to get response result and compare status code or response body to expected result from user story to know that it pass or fail.

11. Những test case nên automate còn test case nào không automate

=> Test cases that can be automated include:
	- important test cases
	- big data
	- combination
=> Test cases that do not need automation include:
	- only happens once
	- simple test cases


Trường hợp kiểm thử cần thực hiện nhiều lần, thường xuyên phải thực hiện regression test, một số lượng test data lớn cần hoàn thành trong một thời gian ngắn.
Kiểm thử cần thực hiện ở môi trường khác nhau
Áp dụng với những project ổn định, đặc điểm kĩ thuật được xác định trước, chức năng không thay đổi trong tương lai
Kiểm thử hoạt động cơ bản mà phải thực hiện lặp lại với lượng test data lớn
Kiểm tra nhiều màn hình trong thời gian ngắn, liên tục
Thực thi test performance test hoặc load test thì kiểm thử tự động gần như là lựa chọn duy nhất










 10. Viết test script như thế nào
=> I use Pycharm to write test scripts and create 4 directories
- Library folder: where to store the necessary libraries to help execute test scripts
- Results directory: where the logs and execution results of test scripts
- Resources folder: this folder stores reusable code files. It will mainly be used to implement the Page Object Model
- Test folder: this folder contains files for writing test scripts



2. How do you write test cases?
	=> I will write manual test cases base on the user story or requirements to list the suitable test cases and perform all those test case, after the user story have done 
		I will select test cases which can automate and write test script then automate those test cases 

How familiar are you with Selenium?
	=> Selenium is the auto test the tool check for the web application
		Selenium is used to automate tasks with the browser, or easier to understand, it helps the author to reset the browser tasks like a real person.
		For example: I can program it to automatically launch the browser, open a link, input data, or get info page, upload or download data from a web page.

3. How would you select a test case for automation?
	=> I will write manual test cases firstly, after that I will select test cases which can automate and automate those test case

4. What is test plan ?
	=> Test plan is a document describing the scope, approach, resources and schedule of intended test activities.

5. What is your the most challenges in previous project?  how do you solve it?
	=> In the last project, Business was the hardest thing for me. because i need to understand it to create the right test cases
	=> I fix the problem by i will list the questions related to the problem i don't understand then i will contact the developer to ask, if the developer dont understand i will contact the customer to question

6. When do you create bug report ? 	
	=> When i find diffrence between user story and the return result of the test case.

7. How do you log the Bug Report ? 
	 =>I will check if the error really occurs, then I will write the error on jira 
	=> The bug report includes: 
		+ the error summary title
		+ the test environment, 
		+ step to process
		+ actual result
		+ expect result
		+ attachment some pictures and video
		+ the description of the error

8. what do you do if developer said that it's not a bug ? 
	=> I will replicate again to make sure that it is a bug, if it is really a bug, I will disucuss with BA about that bug and follow BA's instructions


9. What Is the API testing ?
	=> API testing is a type of software that involves direct testing of applications that establish interfaces 
		and is part of integration testing to determine if the software meets expectations in terms of functionality, 
		reliability, performance, and performance. performance and security or not.

10. How do you write test case for API ? ~ How do you Performance the API testing ?
 => I will be base on user story to list full test cases for API and I will apply it to test automation, when I get expected results from test automation I will take it to compare with the request in the user story.

11. What are testing type do u know ?
 	=> Test types I know:
- Functional testing is a type of testing which verifies that each function of the software application works in conformance with the requirement and specification. This testing focuses on checking of user interface, APIs, database, security, and functionality of the Application Under Test.
 + Unit Testing is a type of software testing where individual units or components of a software are tested to validate that each unit of the software code performs as expected. A unit may be an individual function, method, procedure, module, or object.
 + Integration Testing is the process of testing the interface between two software units or module to determine the correctness of the interface. Integration testing is performed after all modules have been unit tested.
 + Smoke Testing is a software testing technique to verify that the important features of software are working fine. It is executed before any functional or regression tests are executed.
 + Acceptance Testing is a method of software testing where a system is tested to evaluate the compliance of the system with the business requirements and evaluate whether it is acceptable for delivery or not.
 + Usability Testing is a type of testing, that is done from an end user’s perspective to determine if the system is easily usable
 + System Testing  is a type of software testing that is performed on a complete integrated system to evaluate the compliance of the system with the corresponding requirements.
 + Regression Testing is a type of software testing to make sure that the old code still works once the latest code changes are done.
- Non-functional testing is a type of software testing to check non-functional aspects of a software application. It is designed to test the readiness of a system as per nonfunctional parameters which are never addressed by functional testing.
 + Compatibility testing
 + Compliance testing
 + Endurance testing
 + Load testing is a type of Performance Testing which determines the behavior of the application when multiple users use it at the same time. It is the response of the system measured under varying load conditions. The load testing is carried out for normal and extreme load conditions.
 + Performance testing is a type of software testing that is carried out to test the speed, scalability, stability and reliability of the software product or application.
 + Recovery testing
 + Security testing
 + Scalability testing
 + Stress testing is a type of software testing that verifies the stability and reliability of the system. T
	his test particularly determines the system on its robustness and error handling under extremely heavy load conditions. It even tests beyond the normal operating point and analyses how the system works under the extreme conditions.


12. Bug lifecycle
 	+ When tester detects a bug, its status is NEW
	+ then tester report bug and developers agree to fix then switched to IN PROGRESS.
	+ When the bug is fixed, it will be switched to READY FOR TEST. After that, tester will check the bug again, if test fail, tester will report it again and its status will be REOPEN, 
	+ else test pass its status will be DONE. In case developers don't agree that bug, its status will be NEED MORE INFORMATION. 
	+ In case both tester and developer consider that it doesn't a bug, its status will be CLOSED.

13. Some activites 
 => In previous project, i enjoyed some activites such as sprint planning sprint review, sprint respective and daily meeting
	Sprint Planning
        - During sprint planning, the entire scrum team collaborates and discusses the desired high-priority work for the sprint and defines the sprint goal.
       	
	Daily Scrum
	- The development team meets for 15 minutes (or less) every day of the sprint to inspect progress toward the sprint goal.
	- I have to answer three question: what did i do yesterday, what will i do to day, have any blocker (issue)

	Sprint Review
	- During a sprint review, the scrum team invites stakeholders to discuss what was completed during the sprint

	Sprint Retrospective
	- During a sprint retrospective, the scrum team discusses what start doing, keep doing, stop doing.

	Daily meeting
	 - I have answer three questions: what did i do, plan to do , any issue blocker.

14. How do you test script ?
	=> Pycharm is a tool for me to script and I create a file with extension .robot
	=> then i base on the test cases i have chosen and use selenium library to test the ui, request the library to test the API

15. What are the benefits of using the Robot Framework ?
 => Easy to set up and use, and it allows to create and run test cases.
 => it's free
 => Any beginner can get start with the robot framework because it is simple and does not require much develop skil


16. What do you understand about test setup and teardown in the context of the robot framework?

17. What is the robot framework ?
	 => Robot Framework is an extensible testing framework to use for acceptance testing phase (AT), acceptance test driven development phase (ATDD) and can be used for automated testing

18. What are the disadvantages of using the robot framework?
	=> It's easy to set up and use, and it allows you to create and run test cases. Any beginner may get started with the robot framework because it is simple and does not require much testing knowledge.
	 All reports are generated automatically as well when we run test script without any further commands

19. Differentiate between Robot Framework and Selenium?
	=> - Robot framework: is an open-source automation framework with a wide range of applications, it can use for API testing, web testing and database testing
           - Selenium: is a open-source Web automation testing framework. It's mostly a front-end component and functionality testing tool for browsers

20. Explain the hierarchical structure for arranging test cases in the context of the robot framework ?

21. What are the different types of variables in the context of the robot framework ?
	=> Variables are a key component of Robot Framework, and they can be utilized in almost every test data scenario. 
		They're most typically used as arguments for keywords in the Test Case and Keyword sections, although they're also allowed in all settings.
		 A variable cannot be used to specify a standard keyword name, but the BuiltIn keyword Run Keyword can be used to achieve the same result.
	+ Following are the different types of variables:
		+ Scalar Variables:
		+ List Variables
		+ Dictionary Variables
		+ Dictionary Variables
		+ Environment Variables

22. Differentiate between Robot Framework and Cucumber.
	=> - Robot framework: It is based on the Python programming language. It uses keyword-driven testing to write test cases
           - Cucumber: It is based on the Ruby programming language. It is a behaviour-driven development automation tool. The specifications are written in plain text English, making them understandable to testers, developers or BA.



 
How many test cases have you automated in a day?
 => I think it depends on the Test Scenario. if the situation is complex i can do about 2-3 test cases and otherwise simple i can do more.















